--- modules/libfabric/prov/hook/src/hook_domain.c
+++ modules/libfabric/prov/hook/src/hook_domain.c
@@ -102,7 +102,7 @@
 	.regattr = hook_mr_regattr,
 };
 
-static ssize_t hook_credit_handler(struct fid_ep *ep_fid, size_t credits)
+static ssize_t hook_credit_handler(struct fid_ep *ep_fid, uint64_t credits)
 {
 	/*
 	 * called from the base provider, ep_fid is the base ep, and
@@ -110,18 +110,17 @@
 	 */
 	struct hook_ep *ep = (struct hook_ep *)ep_fid->fid.context;
 
-	return (*ep->domain->base_credit_handler)(&ep->ep, credits);
+        return (*ep->domain->base_credit_handler)(&ep->ep, (uint64_t) credits);
 }
 
 static void hook_set_send_handler(struct fid_domain *domain_fid,
-		ssize_t (*credit_handler)(struct fid_ep *ep, size_t credits))
+		ssize_t (*credit_handler)(struct fid_ep *ep, uint64_t credits))
 {
 	struct hook_domain *domain = container_of(domain_fid,
 						  struct hook_domain, domain);
 
-	domain->base_credit_handler = credit_handler;
-	domain->base_ops_flow_ctrl->set_send_handler(domain->hdomain,
-						     hook_credit_handler);
+     domain->base_credit_handler = (ssize_t (*)(struct fid_ep *, uint64_t)) credit_handler;
+     domain->base_ops_flow_ctrl->set_send_handler(domain->hdomain, hook_credit_handler);
 }
 
 static int hook_enable_ep_flow_ctrl(struct fid_ep *ep_fid, uint64_t threshold)
@@ -131,11 +130,11 @@
 	return ep->domain->base_ops_flow_ctrl->enable(ep->hep, threshold);
 }
 
-static void hook_add_credits(struct fid_ep *ep_fid, size_t credits)
+static void hook_add_credits(struct fid_ep *ep_fid, uint64_t credits)
 {
 	struct hook_ep *ep = container_of(ep_fid, struct hook_ep, ep);
 
-	ep->domain->base_ops_flow_ctrl->add_credits(ep->hep, credits);
+	ep->domain->base_ops_flow_ctrl->add_credits(ep->hep, (uint64_t)credits);
 }
 
 static bool hook_flow_ctrl_available(struct fid_ep *ep_fid)
@@ -146,11 +145,11 @@
 }
 
 static struct ofi_ops_flow_ctrl hook_ops_flow_ctrl = {
-	.size = sizeof(struct ofi_ops_flow_ctrl),
-	.add_credits = hook_add_credits,
-	.enable = hook_enable_ep_flow_ctrl,
-	.set_send_handler = hook_set_send_handler,
-	.available = hook_flow_ctrl_available,
+    .size = sizeof(struct ofi_ops_flow_ctrl),
+    .add_credits = (void (*)(struct fid_ep *, uint64_t)) hook_add_credits,
+    .enable = hook_enable_ep_flow_ctrl,
+    .set_send_handler = hook_set_send_handler,
+    .available = hook_flow_ctrl_available,
 };
 
 static int hook_domain_ops_open(struct fid *fid, const char *name,
